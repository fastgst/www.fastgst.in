name: Build and Deploy to Azure Blob

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site (Eleventy + Tailwind CSS)
        run: npm run build

      - name: Deploy to Azure Blob Storage
        uses: azure/cli@v1
        with:
          inlineScript: |
            # üßπ Step 1: Delete all existing blobs
            az storage blob delete-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --source '$web' \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }}

            # üåê Step 2a: Upload HTML and CSS with short cache (5 min)
            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --pattern "*.html" \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --content-cache-control "public, max-age=300, must-revalidate"

            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --pattern "*.css" \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --content-cache-control "public, max-age=300, must-revalidate"

            # üñºÔ∏è Step 2b: Upload images & other static assets with long cache (1 year)
            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --pattern "*.webp" \
              --content-cache-control "public, max-age=31536000, immutable"

            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --pattern "*.png" \
              --content-cache-control "public, max-age=31536000, immutable"

            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --pattern "*.jpg" \
              --content-cache-control "public, max-age=31536000, immutable"

            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --pattern "*.jpeg" \
              --content-cache-control "public, max-age=31536000, immutable"

            az storage blob upload-batch \
              --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
              --destination '$web' \
              --source ./_site \
              --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
              --pattern "*.svg" \
              --content-cache-control "public, max-age=31536000, immutable"

      - name: Purge Bunny CDN Cache
        run: |
          HTTP_STATUS=$(curl --location --request POST 'https://api.bunny.net/pullzone/4346060/purgeCache' \
            --header 'AccessKey: ${{ secrets.BUNNY_CDN_APIKEY }}' \
            --write-out '%{http_code}' \
            --silent \
            --output /dev/null)
          
          echo "Bunny CDN API Response Status: $HTTP_STATUS"
          
          if [[ "$HTTP_STATUS" =~ ^2[0-9][0-9]$ ]]; then
            echo "‚úÖ Cache purged successfully"
            exit 0
          else
            echo "‚ùå Failed to purge cache. Expected 2XX, got $HTTP_STATUS"
            exit 1
          fi
