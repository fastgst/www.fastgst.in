<!-- Common Scripts -->
<script>
    // Notification helper function
    function sendNotification(title, text) {
        fetch('https://api.console.fastgst.in/global/notify', {
            method: 'POST',
            headers: {
                'accept': '*/*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: title,
                text: text
            })
        }).catch(function(error) {
            // Silently fail - don't disrupt user experience
            console.log('Notification error:', error);
        });
    }

    // Send page visit notification
    window.addEventListener('load', function() {
        {% if page.url == '/' %}
        window.scrollTo(0, 0);
        sendNotification('Website Visit', 'Someone is going through the website');
        {% else %}
        sendNotification('Page Visit', 'Someone is visiting: ' + window.location.href);
        {% endif %}
    });

    {% if page.url == '/' %}
    // Also scroll to top immediately
    if (history.scrollRestoration) {
        history.scrollRestoration = 'manual';
    }
    window.scrollTo(0, 0);
    {% endif %}

    // Track button clicks
    document.addEventListener('click', function(e) {
        var target = e.target.closest('a');
        if (!target) return;
        
        var href = target.getAttribute('href');
        if (href && href.includes('docs.taxlookupapi.fastgst.in')) {
            sendNotification('Doc Visit', 'Someone opened API documentation');
        } else if (href && href.includes('api.taxlookup.fastgst.in/swagger')) {
            sendNotification('Swagger Visit', 'Someone opened Swagger');
        } else if (href && href.includes('console.fastgst.in')) {
            sendNotification('Console Visit', 'Someone opened Console');
        }
    });

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
</script>

{% if customScripts %}
{{ customScripts | safe }}
{% endif %}

{% if page.url == '/' %}
<script>
    // Newsletter form handling
    document.getElementById('newsletterForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const email = this.querySelector('input[type="email"]').value;
        if (email) {
            alert('Thank you for subscribing! We\'ll notify you when our platform launches.');
            this.reset();
        }
    });

    // Intersection Observer for animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('fade-in');
            }
        });
    }, observerOptions);

    // Observe sections for animation
    document.querySelectorAll('section').forEach(section => {
        observer.observe(section);
    });

    // Scroll depth tracking
    window.addEventListener('scroll', function() {
        const scrollPosition = window.scrollY + window.innerHeight;
        const scrollHeight = document.body.scrollHeight;
        const scrolled = (scrollPosition / scrollHeight) * 100;

        if (scrolled >= 25 && !window.scroll25Tracked) {
            window.scroll25Tracked = true;
            gtag('event', 'scroll_depth', {
                'event_category': 'Scroll',
                'event_label': '25% Page Scroll'
            });
        }

        if (scrolled >= 50 && !window.scroll50Tracked) {
            window.scroll50Tracked = true;
            gtag('event', 'scroll_depth', {
                'event_category': 'Scroll',
                'event_label': '50% Page Scroll'
            });
        }

        if (scrolled >= 75 && !window.scroll75Tracked) {
            window.scroll75Tracked = true;
            gtag('event', 'scroll_depth', {
                'event_category': 'Scroll',
                'event_label': '75% Page Scroll'
            });
        }

        if (scrolled >= 90 && !window.scroll90Tracked) {
            window.scroll90Tracked = true;
            gtag('event', 'scroll_depth', {
                'event_category': 'Scroll',
                'event_label': '90% Page Scroll'
            });
        }
    });

    // API Demo: Tabs and Request Handling
    function showApiTab(tabName) {
        // Hide all API tab contents
        const contents = document.querySelectorAll('#api-demo .api-tab-content');
        contents.forEach(c => c.classList.add('hidden'));

        // Deactivate all API tab buttons
        const buttons = document.querySelectorAll('#api-demo .api-tab-btn');
        buttons.forEach(b => b.classList.remove('active'));

        // Activate selected
        const content = document.getElementById('api-tab-content-' + tabName);
        if (content) content.classList.remove('hidden');
        const btn = document.getElementById('api-tab-' + tabName);
        if (btn) btn.classList.add('active');

        // Clear meta and response placeholder when switching
        const meta = document.getElementById('api-meta');
        if (meta) meta.textContent = 'Status — • Time — • Size —';
        const resp = document.getElementById('api-response');
        if (resp) resp.innerHTML = '<div class="text-gray-400">Click "Send" to run the request.</div>';

        // Track
        if (typeof gtag === 'function') {
            gtag('event', 'select_content', {
                'event_category': 'API Demo',
                'event_label': 'Tab: ' + tabName
            });
        }
    }

    // Pretty-print and colorize JSON
    function syntaxHighlightJson(jsonValue) {
        const jsonString = typeof jsonValue === 'string' ? jsonValue : JSON.stringify(jsonValue, null, 2);
        const escaped = jsonString
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;');
        return escaped.replace(/("(\\u[\da-fA-F]{4}|\\[^u]|[^\\"])*"\s*:?)|(\b(true|false|null)\b)|(-?\d+(?:\.\d+)?(?:[eE][+\-]?\d+)?)/g, function (match) {
            if (/^".*":$/.test(match)) {
                return '<span class="json-key">' + match + '</span>';
            } else if (/^"/.test(match)) {
                return '<span class="json-string">' + match + '</span>';
            } else if (/true|false/.test(match)) {
                return '<span class="json-boolean">' + match + '</span>';
            } else if (/null/.test(match)) {
                return '<span class="json-null">' + match + '</span>';
            }
            return '<span class="json-number">' + match + '</span>';
        });
    }

    async function sendDemoRequest(tabName) {
        // Send notification when user tries an API call
        sendNotification('Website Visit', 'Someone is going through the website');
        
        // Map each scenario to its respective URL
        const urlMap = {
            'scenario1': 'https://api.taxlookup.fastgst.in/search/hsn?query=milk',
            'scenario2': 'https://api.taxlookup.fastgst.in/search/hsn/04041010',
            'scenario3': 'https://api.taxlookup.fastgst.in/search/hsn/04041010/taxes',
            'scenario4': 'https://api.taxlookup.fastgst.in/search/sac?query=tex',
            'scenario5': 'https://api.taxlookup.fastgst.in/search/sac/997326',
            'scenario6': 'https://api.taxlookup.fastgst.in/search/sac/997326/taxes'
        };
        
        const url = urlMap[tabName] || 'https://api.taxlookup.fastgst.in/search/sac/997326/taxes';
        const headers = {
            'X-API-Key': '****<YOUR API KEY>****'
        };

        const button = document.getElementById('api-send-' + tabName);
        const label = button ? button.querySelector('[data-label]') : null;
        const spinner = button ? button.querySelector('[data-spinner]') : null;
        const resp = document.getElementById('api-response');
        const meta = document.getElementById('api-meta');

        try {
            if (button) button.disabled = true;
            if (label) label.textContent = 'Sending...';
            if (spinner) spinner.classList.remove('hidden');
            if (resp) resp.innerHTML = '<div class="text-gray-400">Loading…</div>';

            const start = performance.now();
            const response = await fetch(url, { method: 'GET', headers });
            const timeMs = Math.round(performance.now() - start);

            const contentType = response.headers.get('content-type') || '';
            let bodyText = await response.text();
            let parsed = null;
            if (contentType.includes('application/json')) {
                try { parsed = JSON.parse(bodyText); } catch (_) {}
            }

            const bytes = new TextEncoder().encode(bodyText).length;
            const sizeText = bytes < 1024 ? bytes + ' B' : (bytes / 1024).toFixed(1) + ' KB';
            if (meta) meta.textContent = 'Status ' + response.status + ' • Time ' + timeMs + ' ms • Size ' + sizeText;

            const html = parsed ? syntaxHighlightJson(parsed) : syntaxHighlightJson(bodyText);
            if (resp) resp.innerHTML = '<pre class="whitespace-pre-wrap">' + html + '</pre>';

            if (typeof gtag === 'function') {
                gtag('event', 'api_call', {
                    'event_category': 'API Demo',
                    'event_label': tabName,
                    'value': response.status
                });
            }
        } catch (err) {
            if (meta) meta.textContent = 'Error';
            if (resp) resp.innerHTML = '<div class="text-red-300">' + (err && err.message ? err.message : 'Request failed') + '</div>';
        } finally {
            if (button) button.disabled = false;
            if (label) label.textContent = 'Send';
            if (spinner) spinner.classList.add('hidden');
        }
    }

    // Initialize API tabs default
    document.addEventListener('DOMContentLoaded', function () {
        showApiTab('scenario3');
    });
</script>
{% endif %}

